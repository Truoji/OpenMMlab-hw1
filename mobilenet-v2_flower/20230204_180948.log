2023-02-04 18:09:48,085 - mmcls - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.16 (default, Jan 17 2023, 23:13:24) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 3090
CUDA_HOME: /data/apps/cuda/11.1
NVCC: Cuda compilation tools, release 11.1, V11.1.74
GCC: gcc (GCC) 7.3.0
PyTorch: 1.10.0+cu113
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.11.1+cu113
OpenCV: 4.7.0
MMCV: 1.7.1
MMCV Compiler: GCC 9.3
MMCV CUDA Compiler: 11.3
MMClassification: 0.25.0+3d4f80d
------------------------------------------------------------

2023-02-04 18:09:48,086 - mmcls - INFO - Distributed training: False
2023-02-04 18:09:48,190 - mmcls - INFO - Config:
dataset_type = 'ImageNet'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='RandomResizedCrop', size=224, backend='pillow'),
    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='ToTensor', keys=['gt_label']),
    dict(type='Collect', keys=['img', 'gt_label'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', size=(256, -1), backend='pillow'),
    dict(type='CenterCrop', crop_size=224),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='Collect', keys=['img'])
]
data = dict(
    samples_per_gpu=32,
    workers_per_gpu=2,
    train=dict(
        type='ImageNet',
        data_prefix='data/flower_data/train',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='RandomResizedCrop', size=224, backend='pillow'),
            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='ToTensor', keys=['gt_label']),
            dict(type='Collect', keys=['img', 'gt_label'])
        ],
        ann_file='data/flower_data/train.txt',
        classes='data/flower_data/classes.txt'),
    val=dict(
        type='ImageNet',
        data_prefix='data/flower_data/val',
        ann_file='data/flower_data/val.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1), backend='pillow'),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ],
        classes='data/flower_data/classes.txt'),
    test=dict(
        type='ImageNet',
        data_prefix='data/imagenet/val',
        ann_file='data/imagenet/meta/val.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1), backend='pillow'),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]))
evaluation = dict(
    interval=1, metric='accuracy', metric_options=dict(topk=(1, )))
optimizer = dict(type='SGD', lr=0.005, momentum=0.9, weight_decay=4e-05)
optimizer_config = dict(grad_clip=None)
lr_config = dict(policy='step', gamma=0.98, step=1)
runner = dict(type='EpochBasedRunner', max_epochs=100)
checkpoint_config = dict(interval=10)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = 'checkpoints/mobilenet_v2_batch256_imagenet_20200708-3b2dc3af.pth'
resume_from = None
workflow = [('train', 1)]
model = dict(
    type='ImageClassifier',
    backbone=dict(type='MobileNetV2', widen_factor=1.0),
    neck=dict(type='GlobalAveragePooling'),
    head=dict(
        type='LinearClsHead',
        num_classes=5,
        in_channels=1280,
        loss=dict(type='CrossEntropyLoss', loss_weight=1.0),
        topk=(1, )))
work_dir = 'work/mobilenet-v2_flower'
gpu_ids = [0]

2023-02-04 18:09:48,192 - mmcls - INFO - Set random seed to 1895999801, deterministic: False
2023-02-04 18:09:54,741 - mmcls - INFO - load checkpoint from local path: checkpoints/mobilenet_v2_batch256_imagenet_20200708-3b2dc3af.pth
2023-02-04 18:09:54,801 - mmcls - WARNING - The model and loaded state dict do not match exactly

size mismatch for head.fc.weight: copying a param with shape torch.Size([1000, 1280]) from checkpoint, the shape in current model is torch.Size([5, 1280]).
size mismatch for head.fc.bias: copying a param with shape torch.Size([1000]) from checkpoint, the shape in current model is torch.Size([5]).
2023-02-04 18:09:54,801 - mmcls - INFO - Start running, host: scz0asd@g0001, work_dir: /data/run01/scz0asd/mmclassification/work/mobilenet-v2_flower
2023-02-04 18:09:54,802 - mmcls - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-02-04 18:09:54,802 - mmcls - INFO - workflow: [('train', 1)], max: 100 epochs
2023-02-04 18:09:54,802 - mmcls - INFO - Checkpoints will be saved to /data/run01/scz0asd/mmclassification/work/mobilenet-v2_flower by HardDiskBackend.
2023-02-04 18:10:05,581 - mmcls - INFO - Epoch(val) [1][18]	accuracy_top-1: 90.2098
2023-02-04 18:10:13,561 - mmcls - INFO - Epoch(val) [2][18]	accuracy_top-1: 91.7832
2023-02-04 18:10:21,525 - mmcls - INFO - Epoch(val) [3][18]	accuracy_top-1: 91.6084
2023-02-04 18:10:29,522 - mmcls - INFO - Epoch(val) [4][18]	accuracy_top-1: 92.1329
2023-02-04 18:10:37,493 - mmcls - INFO - Epoch(val) [5][18]	accuracy_top-1: 94.2308
2023-02-04 18:10:45,469 - mmcls - INFO - Epoch(val) [6][18]	accuracy_top-1: 93.8811
2023-02-04 18:10:53,409 - mmcls - INFO - Epoch(val) [7][18]	accuracy_top-1: 94.4056
2023-02-04 18:11:01,397 - mmcls - INFO - Epoch(val) [8][18]	accuracy_top-1: 94.9301
2023-02-04 18:11:09,410 - mmcls - INFO - Epoch(val) [9][18]	accuracy_top-1: 95.8042
2023-02-04 18:11:16,245 - mmcls - INFO - Saving checkpoint at 10 epochs
2023-02-04 18:11:17,458 - mmcls - INFO - Epoch(val) [10][18]	accuracy_top-1: 95.1049
2023-02-04 18:11:25,414 - mmcls - INFO - Epoch(val) [11][18]	accuracy_top-1: 95.6294
2023-02-04 18:11:33,388 - mmcls - INFO - Epoch(val) [12][18]	accuracy_top-1: 94.2308
2023-02-04 18:11:41,317 - mmcls - INFO - Epoch(val) [13][18]	accuracy_top-1: 95.1049
2023-02-04 18:11:49,325 - mmcls - INFO - Epoch(val) [14][18]	accuracy_top-1: 95.9790
2023-02-04 18:11:57,251 - mmcls - INFO - Epoch(val) [15][18]	accuracy_top-1: 94.7552
2023-02-04 18:12:05,192 - mmcls - INFO - Epoch(val) [16][18]	accuracy_top-1: 94.9301
2023-02-04 18:12:13,114 - mmcls - INFO - Epoch(val) [17][18]	accuracy_top-1: 96.5035
2023-02-04 18:12:21,010 - mmcls - INFO - Epoch(val) [18][18]	accuracy_top-1: 95.4545
2023-02-04 18:12:28,947 - mmcls - INFO - Epoch(val) [19][18]	accuracy_top-1: 95.4545
2023-02-04 18:12:35,695 - mmcls - INFO - Saving checkpoint at 20 epochs
2023-02-04 18:12:36,910 - mmcls - INFO - Epoch(val) [20][18]	accuracy_top-1: 95.2797
2023-02-04 18:12:44,870 - mmcls - INFO - Epoch(val) [21][18]	accuracy_top-1: 95.9790
2023-02-04 18:12:52,776 - mmcls - INFO - Epoch(val) [22][18]	accuracy_top-1: 96.1538
2023-02-04 18:13:00,740 - mmcls - INFO - Epoch(val) [23][18]	accuracy_top-1: 95.4545
2023-02-04 18:13:09,252 - mmcls - INFO - Epoch(val) [24][18]	accuracy_top-1: 94.0559
2023-02-04 18:13:17,228 - mmcls - INFO - Epoch(val) [25][18]	accuracy_top-1: 95.4545
2023-02-04 18:13:25,206 - mmcls - INFO - Epoch(val) [26][18]	accuracy_top-1: 95.4545
2023-02-04 18:13:33,163 - mmcls - INFO - Epoch(val) [27][18]	accuracy_top-1: 95.4545
2023-02-04 18:13:41,060 - mmcls - INFO - Epoch(val) [28][18]	accuracy_top-1: 94.7552
2023-02-04 18:13:49,063 - mmcls - INFO - Epoch(val) [29][18]	accuracy_top-1: 95.9790
2023-02-04 18:13:55,889 - mmcls - INFO - Saving checkpoint at 30 epochs
2023-02-04 18:13:57,326 - mmcls - INFO - Epoch(val) [30][18]	accuracy_top-1: 95.9790
2023-02-04 18:14:05,241 - mmcls - INFO - Epoch(val) [31][18]	accuracy_top-1: 95.2797
2023-02-04 18:14:13,163 - mmcls - INFO - Epoch(val) [32][18]	accuracy_top-1: 96.3287
2023-02-04 18:14:21,064 - mmcls - INFO - Epoch(val) [33][18]	accuracy_top-1: 95.9790
2023-02-04 18:14:29,078 - mmcls - INFO - Epoch(val) [34][18]	accuracy_top-1: 95.4545
2023-02-04 18:14:37,027 - mmcls - INFO - Epoch(val) [35][18]	accuracy_top-1: 95.6294
2023-02-04 18:14:45,019 - mmcls - INFO - Epoch(val) [36][18]	accuracy_top-1: 96.5035
2023-02-04 18:14:52,980 - mmcls - INFO - Epoch(val) [37][18]	accuracy_top-1: 95.8042
2023-02-04 18:15:00,999 - mmcls - INFO - Epoch(val) [38][18]	accuracy_top-1: 96.1538
2023-02-04 18:15:08,973 - mmcls - INFO - Epoch(val) [39][18]	accuracy_top-1: 94.5804
2023-02-04 18:15:15,709 - mmcls - INFO - Saving checkpoint at 40 epochs
2023-02-04 18:15:16,915 - mmcls - INFO - Epoch(val) [40][18]	accuracy_top-1: 95.8042
2023-02-04 18:15:24,864 - mmcls - INFO - Epoch(val) [41][18]	accuracy_top-1: 95.8042
2023-02-04 18:15:32,836 - mmcls - INFO - Epoch(val) [42][18]	accuracy_top-1: 95.2797
2023-02-04 18:15:40,840 - mmcls - INFO - Epoch(val) [43][18]	accuracy_top-1: 95.8042
2023-02-04 18:15:48,747 - mmcls - INFO - Epoch(val) [44][18]	accuracy_top-1: 95.2797
2023-02-04 18:15:56,787 - mmcls - INFO - Epoch(val) [45][18]	accuracy_top-1: 95.6294
2023-02-04 18:16:04,719 - mmcls - INFO - Epoch(val) [46][18]	accuracy_top-1: 95.4545
2023-02-04 18:16:12,716 - mmcls - INFO - Epoch(val) [47][18]	accuracy_top-1: 96.1538
2023-02-04 18:16:20,737 - mmcls - INFO - Epoch(val) [48][18]	accuracy_top-1: 95.9790
2023-02-04 18:16:28,686 - mmcls - INFO - Epoch(val) [49][18]	accuracy_top-1: 95.9790
2023-02-04 18:16:35,512 - mmcls - INFO - Saving checkpoint at 50 epochs
2023-02-04 18:16:36,718 - mmcls - INFO - Epoch(val) [50][18]	accuracy_top-1: 95.8042
2023-02-04 18:16:44,720 - mmcls - INFO - Epoch(val) [51][18]	accuracy_top-1: 96.1538
2023-02-04 18:16:52,658 - mmcls - INFO - Epoch(val) [52][18]	accuracy_top-1: 96.3287
2023-02-04 18:17:00,576 - mmcls - INFO - Epoch(val) [53][18]	accuracy_top-1: 96.3287
2023-02-04 18:17:08,525 - mmcls - INFO - Epoch(val) [54][18]	accuracy_top-1: 96.1538
2023-02-04 18:17:16,484 - mmcls - INFO - Epoch(val) [55][18]	accuracy_top-1: 96.5035
2023-02-04 18:17:24,497 - mmcls - INFO - Epoch(val) [56][18]	accuracy_top-1: 96.1538
2023-02-04 18:17:32,536 - mmcls - INFO - Epoch(val) [57][18]	accuracy_top-1: 97.0280
2023-02-04 18:17:40,492 - mmcls - INFO - Epoch(val) [58][18]	accuracy_top-1: 96.8531
2023-02-04 18:17:48,551 - mmcls - INFO - Epoch(val) [59][18]	accuracy_top-1: 97.0280
2023-02-04 18:17:55,356 - mmcls - INFO - Saving checkpoint at 60 epochs
2023-02-04 18:17:56,558 - mmcls - INFO - Epoch(val) [60][18]	accuracy_top-1: 96.6783
2023-02-04 18:18:04,459 - mmcls - INFO - Epoch(val) [61][18]	accuracy_top-1: 96.6783
2023-02-04 18:18:12,502 - mmcls - INFO - Epoch(val) [62][18]	accuracy_top-1: 96.8531
2023-02-04 18:18:20,468 - mmcls - INFO - Epoch(val) [63][18]	accuracy_top-1: 96.6783
2023-02-04 18:18:28,428 - mmcls - INFO - Epoch(val) [64][18]	accuracy_top-1: 96.5035
2023-02-04 18:18:36,389 - mmcls - INFO - Epoch(val) [65][18]	accuracy_top-1: 96.3287
2023-02-04 18:18:44,327 - mmcls - INFO - Epoch(val) [66][18]	accuracy_top-1: 96.3287
2023-02-04 18:18:52,282 - mmcls - INFO - Epoch(val) [67][18]	accuracy_top-1: 96.3287
2023-02-04 18:19:00,199 - mmcls - INFO - Epoch(val) [68][18]	accuracy_top-1: 96.8531
2023-02-04 18:19:08,147 - mmcls - INFO - Epoch(val) [69][18]	accuracy_top-1: 96.8531
2023-02-04 18:19:14,934 - mmcls - INFO - Saving checkpoint at 70 epochs
2023-02-04 18:19:16,132 - mmcls - INFO - Epoch(val) [70][18]	accuracy_top-1: 96.3287
2023-02-04 18:19:24,065 - mmcls - INFO - Epoch(val) [71][18]	accuracy_top-1: 95.9790
2023-02-04 18:19:32,039 - mmcls - INFO - Epoch(val) [72][18]	accuracy_top-1: 96.5035
2023-02-04 18:19:40,013 - mmcls - INFO - Epoch(val) [73][18]	accuracy_top-1: 96.8531
2023-02-04 18:19:47,985 - mmcls - INFO - Epoch(val) [74][18]	accuracy_top-1: 97.5525
2023-02-04 18:19:56,037 - mmcls - INFO - Epoch(val) [75][18]	accuracy_top-1: 97.2028
2023-02-04 18:20:04,028 - mmcls - INFO - Epoch(val) [76][18]	accuracy_top-1: 96.5035
2023-02-04 18:20:12,099 - mmcls - INFO - Epoch(val) [77][18]	accuracy_top-1: 96.6783
2023-02-04 18:20:20,126 - mmcls - INFO - Epoch(val) [78][18]	accuracy_top-1: 96.6783
2023-02-04 18:20:28,070 - mmcls - INFO - Epoch(val) [79][18]	accuracy_top-1: 96.6783
2023-02-04 18:20:34,870 - mmcls - INFO - Saving checkpoint at 80 epochs
2023-02-04 18:20:36,311 - mmcls - INFO - Epoch(val) [80][18]	accuracy_top-1: 96.6783
2023-02-04 18:20:44,269 - mmcls - INFO - Epoch(val) [81][18]	accuracy_top-1: 96.8531
2023-02-04 18:20:52,195 - mmcls - INFO - Epoch(val) [82][18]	accuracy_top-1: 96.8531
2023-02-04 18:21:00,241 - mmcls - INFO - Epoch(val) [83][18]	accuracy_top-1: 96.3287
2023-02-04 18:21:08,166 - mmcls - INFO - Epoch(val) [84][18]	accuracy_top-1: 96.8531
2023-02-04 18:21:16,144 - mmcls - INFO - Epoch(val) [85][18]	accuracy_top-1: 97.0280
2023-02-04 18:21:24,227 - mmcls - INFO - Epoch(val) [86][18]	accuracy_top-1: 96.3287
2023-02-04 18:21:32,207 - mmcls - INFO - Epoch(val) [87][18]	accuracy_top-1: 96.3287
2023-02-04 18:21:40,193 - mmcls - INFO - Epoch(val) [88][18]	accuracy_top-1: 96.3287
2023-02-04 18:21:48,148 - mmcls - INFO - Epoch(val) [89][18]	accuracy_top-1: 96.6783
2023-02-04 18:21:54,941 - mmcls - INFO - Saving checkpoint at 90 epochs
2023-02-04 18:21:56,152 - mmcls - INFO - Epoch(val) [90][18]	accuracy_top-1: 96.8531
2023-02-04 18:22:04,100 - mmcls - INFO - Epoch(val) [91][18]	accuracy_top-1: 96.8531
2023-02-04 18:22:12,134 - mmcls - INFO - Epoch(val) [92][18]	accuracy_top-1: 96.6783
2023-02-04 18:22:20,117 - mmcls - INFO - Epoch(val) [93][18]	accuracy_top-1: 96.5035
2023-02-04 18:22:28,136 - mmcls - INFO - Epoch(val) [94][18]	accuracy_top-1: 96.3287
2023-02-04 18:22:36,165 - mmcls - INFO - Epoch(val) [95][18]	accuracy_top-1: 96.5035
2023-02-04 18:22:44,209 - mmcls - INFO - Epoch(val) [96][18]	accuracy_top-1: 97.0280
2023-02-04 18:22:52,170 - mmcls - INFO - Epoch(val) [97][18]	accuracy_top-1: 96.6783
2023-02-04 18:23:00,233 - mmcls - INFO - Epoch(val) [98][18]	accuracy_top-1: 95.9790
2023-02-04 18:23:08,224 - mmcls - INFO - Epoch(val) [99][18]	accuracy_top-1: 96.5035
2023-02-04 18:23:15,125 - mmcls - INFO - Saving checkpoint at 100 epochs
2023-02-04 18:23:16,339 - mmcls - INFO - Epoch(val) [100][18]	accuracy_top-1: 97.2028
